1）机械臂内可用域为alias,alias 命名规则如下：
    1、字段一：ID号。只针对上料阶段，规则如1-2，按照行列顺序，第一个数字表示行，第二个数字表示列。行列从1 开始计数。
    2、字段二：类型。分为:upload，detect，transition。以上类型不可同时存在，如单个类型有多个存在，upload detect transition点可在后加'-数字'，从1 开始计数。如transition-1，transition-2。每个点位需要独一无二的类型+数字组合，检测类型后需再跟-A，-B，-C
    3、字段三：回位点。每个点对应运动点，及回位点，其中所对应回位点规则：关键字：reposition，在字段一_二后+‘_reposition+数字’，1 base。如1-2_upload-2_reposition-1，第1行2列上料点2回位点1

    注：以上三段命名，分割符号为‘_’,连接符号位‘-’
    需要定义一个总的reset点，alias,直接命名：reset
    每个点只需要出现一次，根据以上命名，可进行组合，通过读工程json，解析出server所需自定义json配置
    所有检测点，可不用带ID号，根据上料号ID，代码往下自动添加
    写一个python 脚本，可规模生成output_json.json文件
原始json
[
  {
    "id": "5993b7a9-d0c3-4bfc-b7ba-836659805569",
    "alias": "1-2_upload-2_reposition-1",
    "pose": [
      3.9983,
      -445.455566,
      411.148163,
      28.390125,
      -68.045593,
      51.276779
    ],
    "name": "P1",
    "tool": 0,
    "user": 0,
    "joint": [
      291.359467,
      -117.27977,
      78.786201,
      -299.601654,
      61.913452,
      -111.490601
    ]
  },
  {
    "id": "5651914b-4cf2-4678-bed0-4439daad423a",
    "alias": "1-2_detect-2-A_reposition-2",
    "pose": [
      -376.781342,
      -237.698151,
      411.125671,
      28.402454,
      -68.04734,
      -7.001745
    ],
    "name": "P2",
    "tool": 0,
    "user": 0,
    "joint": [
      233.090164,
      -117.281967,
      78.783813,
      -299.60199,
      61.915787,
      -111.490494
    ]
  },
]
json 解析后最终配置格式
[
  {
    "alias":"1-2_upload-2_reposition-1"
    "id"：1-2,
    "type"："upload-2",
    "reposition"：reposition-1,
    "joint": [
      291.359467,
      -117.27977,
      78.786201,
      -299.601654,
      61.913452,
      -111.490601
    ]
  },
  {
    "alias":"1-2_detect-2-A_reposition-2"
    "id"："1-2",
    "type"："detect-2-A",
    "reposition"："reposition-2",
    "joint": [
      233.090164,
      -117.281967,
      78.783813,
      -299.60199,
      61.915787,
      -111.490494
    ]
  }
]